{"version":3,"file":"static/js/75.06db500d.chunk.js","mappings":"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","sources":["components/Button/Styles.js","components/Button/Button.jsx","components/ContactForm/Styles.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactItem/Styles.js","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/Styles.js","components/Notification/Styles.js","components/Notification/Notification.jsx","components/ContactsList/ContactList.jsx","components/SearchInput/Styles.js","components/SearchInput/SearchInput.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst hoverAnimation = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nexport const StyledButton = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 6px;\n  padding: 10px 10px;\n  background-color: #ff6b6b;\n  font-size: 16px;\n  font-weight: 700;\n  color: whitesmoke;\n  cursor: pointer;\n  animation: ${hoverAnimation} 1s infinite;\n\n  :hover {\n    box-shadow: inset 0px 0px 10px 5px rgba(0, 0, 0, 0.1);\n    animation: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledButton } from './Styles';\n\nconst Button = ({title, type='button', onClick }) => { return (\n  <StyledButton className=\"btn\" type={type} onClick={onClick}>\n    {title}\n  </StyledButton>\n);}\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 480px;\n  margin: 0 auto;\n\n  .labelTitle {\n    font-size: 24px;\n    white-space: nowrap;\n    margin-right: 20px;\n  }\n  .formLabel {\n    display: flex;\n    justify-content: space-between;\n  }\n  .inputTag {\n    height: 35px;\n    width: 100%;\n    border: 2px solid lightgray;\n    border-radius: 6px;\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { addContact } from '../../redux/contacts/operations';\nimport Button from '../Button';\nimport { StyledForm } from './Styles';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notify.failure(`${name} Вже додано до списку контактів`);\n      return;\n    }\n    dispatch(addContact({ name: name, number: number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return console.log('Відбулася непередбачена ситуація');\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <label className=\"formLabel\">\n        <span className=\"labelTitle\">Ім'я:</span>\n        <input\n          className=\"inputTag\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я]+)*\"\n          title=\"Ім'я може містити лише літери, апостроф, тире та пробіли. Наприклад, Адріан, Джейкоб Мерсер, Шарль де Бац де Кастельмор д'Артаньян.\"\n          onChange={handleChange}\n          value={name}\n          required\n        />\n      </label>\n      <label className=\"formLabel\">\n        <span className=\"labelTitle\">Номер:</span>\n        <input\n          className=\"inputTag\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефону повинен містити лише цифри і може містити пробіли, тире, дужки та може починатися з +\"\n          onChange={handleChange}\n          value={number}\n          required\n        />\n      </label>\n\n      <Button title=\"Добавити контакт\" type=\"submit\" />\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  .contactName {\n    flex-basis: 26%;\n    font-size: 16px;\n    font-weight: 500;\n  }\n\n  .contactNumber {\n    flex-basis: 50%;\n    text-decoration: none;\n    font-size: 16px;\n    color: darkgreen;\n  }\n\n  .contactNumber:hover {\n    color: darkseagreen;\n    text-decoration: underline;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledContact } from './Styles';\nconst ContactItem = ({name, number}) => {\n    return (\n      <StyledContact>\n        <p className=\"contactName\">{name}:</p>\n        <a className=\"contactNumber\" href={'tel:' + number}>\n          {number}\n        </a>\n      </StyledContact>\n    );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin: 0 auto;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  overflow: hidden;\n  .listItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 20px;\n  }\n  li:nth-child(odd) {\n    background-color: rgb(245, 245, 245);\n  }\n\n  .notification {\n    font-size: 18px;\n    text-align: center;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledNotification = styled.p`\n  margin: 0 auto;\n\ttext-align: center;\n  font-size: 18px;\n  color: darkred;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledNotification } from './Styles';\n\nconst Notification = ({ text }) => (\n  <StyledNotification>{text}</StyledNotification>\n);\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n}\nexport default Notification;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\n\nimport ContactItem from './ContactItem';\nimport { StyledList } from './Styles';\nimport Loader from '../Loader/Loader';\nimport Notification from '../Notification';\nimport Button from '../Button';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n  const loading = useSelector(state => state.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const contactsList = filter ? filteredContacts() : contacts;\n\n  return (\n    <>\n      {loading && Loader}\n      {contactsList.length ? (\n        <StyledList>\n          {contactsList.map(({ id, name, number }) => (\n            <li className=\"listItem\" key={id}>\n              <ContactItem name={name} number={number} />\n              <Button\n                title=\"Видалити\"\n                onClick={() => dispatch(deleteContact(id))}\n              />\n            </li>\n          ))}\n        </StyledList>\n      ) : (\n        <Notification\n          text={filter ? 'Could not find this name' : 'Список контактів порожній'}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 500px;\n  margin: 0 auto 20px;\n\n  .inputTitle {\n    font-size: 24px;\n    white-space: nowrap;\n    margin-bottom: 20px;\n  }\n\n  .inputTag {\n    height: 35px;\n    width: 100%;\n    border: 2px solid lightgray;\n    border-radius: 6px;\n    font-size: 18px;\n    font-weight: 500;\n    margin-left: 10px\n  }\n\n  .formInput {\n    padding: 8px;\n    font-size: 18px;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { change } from '../../redux/contacts/slice';\n\nimport { StyledInput } from './Styles';\n\nconst SearchInput = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => dispatch(change(evt.target.value));\n\n  return (\n    <StyledInput>\n      <p className=\"inputTitle\">Фільтрувати за ім'ям:</p>\n      <input\n        className=\"inputTag\"\n        type=\"text\"\n        name=\"filter\"\n        title=\"Будь ласка, введіть ім'я\"\n        onChange={handleChange}\n        value={filter}\n      />\n    </StyledInput>\n  );\n};\n\nexport default SearchInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Section_container__vEvWA\",\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;","import ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactsList';\nimport SearchInput from '../components/SearchInput';\nimport Section from '../components/Section';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <Section title=\"Телефонна книга\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Контакти\">\n        <SearchInput />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Phonebook;"],"names":["hoverAnimation","keyframes","StyledButton","styled","button","title","type","onClick","className","StyledForm","form","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","evt","target","value","console","log","onSubmit","preventDefault","find","contact","toLowerCase","Notify","failure","addContact","pattern","onChange","required","Button","StyledContact","div","href","StyledList","ul","StyledNotification","p","text","filter","loading","isLoading","useEffect","fetchContacts","contactsList","includes","Loader","length","map","id","deleteContact","StyledInput","change","children","css"],"sourceRoot":""}