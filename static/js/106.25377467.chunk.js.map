{"version":3,"file":"static/js/106.25377467.chunk.js","mappings":"kMAEMA,GAAiBC,EAAAA,EAAAA,IAAS,mJAYnBC,EAAeC,EAAAA,GAAOC,OAAM,6VAU1BJ,G,UCTf,EAZe,SAAH,GAA0C,IAArCK,EAAK,EAALA,MAAM,EAAD,EAAEC,KAAAA,OAAI,IAAC,WAAQ,EAAEC,EAAO,EAAPA,QAAgB,OACrD,SAACL,EAAY,CAACM,UAAU,MAAMF,KAAMA,EAAMC,QAASA,EAAQ,SACxDF,GAEH,C,uGCLWI,E,QAAaN,GAAOO,KAAI,mf,oBCmCrC,EA/BkB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACG,UAACH,EAAU,CAACI,SAbM,SAAAC,GACpBA,EAAIC,iBACJ,IAAML,EAAOI,EAAIE,cACjBL,GACIM,EAAAA,EAAAA,IAAM,CACJC,MAAOR,EAAKS,SAASD,MAAME,MAC3BC,SAAUX,EAAKS,SAASE,SAASD,SAGvCV,EAAKY,OACN,EAGuCC,aAAa,MAAK,WACpD,eAAIf,UAAU,QAAO,SAAC,+GACtB,mBAAOA,UAAU,YAAW,WAC1B,iBAAMA,UAAU,aAAY,SAAC,aAC7B,kBAAOA,UAAU,WAAWF,KAAK,QAAQkB,KAAK,cAEhD,mBAAOhB,UAAU,YAAW,WAC1B,iBAAMA,UAAU,aAAY,SAAC,eAC7B,kBAAOA,UAAU,WAAWF,KAAK,WAAWkB,KAAK,iBAEnD,SAACC,EAAA,EAAM,CAACpB,MAAM,uCAASC,KAAK,aAGlC,EC/BA,EAFkB,WAAH,OAAS,SAAC,EAAS,GAAI,C","sources":["components/Button/Styles.js","components/Button/Button.jsx","components/LoginForm/Styles.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst hoverAnimation = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nexport const StyledButton = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 6px;\n  padding: 10px 10px;\n  background-color: #ff6b6b;\n  font-size: 16px;\n  font-weight: 700;\n  color: whitesmoke;\n  cursor: pointer;\n  animation: ${hoverAnimation} 1s infinite;\n\n  :hover {\n    box-shadow: inset 0px 0px 10px 5px rgba(0, 0, 0, 0.1);\n    animation: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledButton } from './Styles';\n\nconst Button = ({title, type='button', onClick }) => { return (\n  <StyledButton className=\"btn\" type={type} onClick={onClick}>\n    {title}\n  </StyledButton>\n);}\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 0 auto;\n  .title {\n    font-size: 24px;\n    text-align: center;\n  }\n  .labelTitle {\n    font-size: 24px;\n    white-space: nowrap;\n    margin-right: 20px;\n  }\n  .formLabel {\n    display: flex;\n    justify-content: space-between;\n  }\n  .inputTag {\n    height: 35px;\n    width: 70%;\n    border: 2px solid lightgray;\n    border-radius: 6px;\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n","import { useDispatch } from \"react-redux\";\nimport { login } from '../../redux/auth/operations';\n\nimport { StyledForm } from './Styles';\nimport Button from '../Button';\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = evt => {\n\t\tevt.preventDefault();\n\t\tconst form = evt.currentTarget;\n\t\tdispatch(\n      login({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n\t\t);\n\t\tform.reset();\n\t}\n\n\treturn (\n    <StyledForm onSubmit={handleSubmit} autoComplete=\"off\">\n      <h2 className=\"title\">Будь ласка, увійдіть</h2>\n      <label className=\"formLabel\">\n        <span className=\"labelTitle\">E-mail:</span>\n        <input className=\"inputTag\" type=\"email\" name=\"email\" />\n      </label>\n      <label className=\"formLabel\">\n        <span className=\"labelTitle\">Password:</span>\n        <input className=\"inputTag\" type=\"password\" name=\"password\" />\n      </label>\n      <Button title=\"Увійти\" type=\"submit\" />\n    </StyledForm>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../components/LoginForm';\n\nconst LoginPage = () => <LoginForm />;\n\nexport default LoginPage;\n"],"names":["hoverAnimation","keyframes","StyledButton","styled","button","title","type","onClick","className","StyledForm","form","dispatch","useDispatch","onSubmit","evt","preventDefault","currentTarget","login","email","elements","value","password","reset","autoComplete","name","Button"],"sourceRoot":""}